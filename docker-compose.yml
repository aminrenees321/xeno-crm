version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: xeno_crm
      MYSQL_USER: xeno
      MYSQL_PASSWORD: xenopassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: backend
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: xeno_crm
      DB_USER: xeno
      DB_PASSWORD: xenopassword
      RABBITMQ_URL: amqp://rabbitmq
      JWT_SECRET: your-jwt-secret
      JWT_EXPIRE: 30d
    ports:
      - "5000:5000"
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  mysql_data:
  rabbitmq_data: